// Шар - игровой персонаж. Новая функциональность - может быть квадратом)

class Ball {
    field int x, y;
    field int radius;
    field int jumpHeight;
    field boolean isJumping;

    constructor Ball new(int px, int py) {
        let x = px;
        let y = py;
        let radius = 10;
        let jumpHeight = 0;
        let isJumping = false;
        return this;
    }

    // Рисует шар / квадрат в зависимости от выбранных настроек
    method void draw(boolean pisBall) {
        var boolean isBall;
        let isBall = pisBall;

        do Screen.setColor(true);
        if (~isBall) {
            do Screen.drawRectangle(x - radius, y - radius, x + radius, y + radius);
            do Screen.setColor(false);
            do Screen.drawRectangle(x - radius + 2, y - radius + 2, x + radius - 2, y + radius - 2);
            do Screen.setColor(true);
        }
        else {
            do Screen.drawCircle(x, y, radius);
            do Screen.setColor(false);
            do Screen.drawCircle(x, y, radius-2);
            do Screen.setColor(true);
        }
        do Screen.drawCircle(x - 3, y - 2, 2);
        do Screen.drawCircle(x + 3, y - 2, 2);
        do Screen.drawRectangle(x-4, y+3, x + 4, y +4);
        return;
    }

    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x - radius, y - radius, x + radius, y + radius);
        return;
    }

    method void jump() {
        if (~isJumping) {
            let jumpHeight = 15;
            let isJumping = true;
        }
        return;
    }
    
    method void update() {
        if (isJumping) {
            let y = y - jumpHeight;
            let jumpHeight = jumpHeight - 1;
            if (y > 150) {
                let y = 150;
                let isJumping = false;
                let jumpHeight = 0;
            }
        }
        return;
    }
    
    method void reset() {
        let y = 150;
        let isJumping = false;
        let jumpHeight = 0;
        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method int getX() {
        return x;
    }

    method int getY() {
        return y;
    }

    method int getRadius() {
        return radius;
    }
}