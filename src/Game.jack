class Game {
    field int currentScore, bestScore, lastHundred;
    field Ball ball;
    field Map map;
    field Power powersMenu;
    field boolean isGameStarted;
    field Wall wall;

    //ИНИЦИАЛИЗАЦИЯ НОВОЙ ИГРЫ
    constructor Game new() {

        let currentScore = 0;
        let lastHundred = 0;
        let bestScore = 0;
        let ball = Ball.new();
        let map = Map.new();
        let wall = Wall.new();
        let isGameStarted = false;
        return this;
    }

    //ЗАПУСК ИГРЫ
    method void start() {
        while (true) {
            do start_menu();
            do run();
        }
        return;
    }

    //МЕНЮ ПЕРЕД НАЧАЛОМ ИГРЫ
    method void start_menu() {
        var boolean start;
        var Button btn;
        var int key;
        let start = false;
        
        do Screen.clearScreen();

        do Output.moveCursor(4, 23);
        do Output.printString("Best score is ");
        do Output.printInt(bestScore);

        let btn = Button.new(130, 100, 250, 50, "PRESS ENTER TO START");
        do btn.print();

        while (~start) {
            let key = Keyboard.keyPressed();
            if (key = 128) {
                let start = true;
            }
        }
        return;
    }

    //ПРОЦЕСС ИГРЫ
    method void run() {
        var char key;
        var boolean exit;
        var string scoreString, f2String, f3String;
        var boolean isImmortal, immortalUsed, isSlowed, slowUsed;
        var int immortalCounter, temp;

        let temp = 0;
        do wall.defaultSpeed();
        let exit = false;
        let isImmortal = false;
        let immortalUsed = false;
        let isSlowed = false;
        let slowUsed = false;
        let immortalCounter = 0;
    
        let scoreString = "Current score: ";
        let f2String = "F2";
        let f3String = "F3";
        
        while (~exit) {
            let key = Keyboard.keyPressed();

            if (key = 32) {
                do ball.jump();
            }
            if (key = 140) {
                do pause_menu();
            }
            if (key = 142) {
                if (~immortalUsed) {
                    let isImmortal = true;
                    let immortalUsed = true;
                    let immortalCounter = 0;
                }
            }
            if (key = 143) {
                if (~slowUsed) {
                    let slowUsed = true;
                    let isSlowed = true;
                    do wall.slowTime();
                }
            }
                
            //do map.updateMap();
            do wall.move();
            do ball.update();
                
            // если мяч врезался в стену
            if (wall.checkCollision(ball)) {
                if (~isImmortal) {
                    let isGameStarted = false;
                    do wall.reset();
                    do ball.reset();
                    if (currentScore > bestScore) {
                        let bestScore = currentScore;
                    }
                    let currentScore = 0;
                    return;
                }
                else {
                    do wall.reset();
                    let immortalCounter = immortalCounter + 1;
                }
            }

            if (immortalCounter = 5) {
                let isImmortal = false;
                let immortalCounter = 0;
            }
            
            let currentScore = currentScore + 1;
            let temp = lastHundred + 100;
            if (currentScore > temp) {
                let lastHundred = temp;
                do wall.increaseSpeed();
            }
            
            do Screen.clearScreen();

            do map.draw();
            do ball.draw();
            do wall.draw();

            do Power.draw();
            do Output.moveCursor(1, 54);
            do Output.printString(f2String);
            do Output.moveCursor(1, 60);
            do Output.printString(f3String);

            if (immortalUsed) {
                do Power.crossF2();
            }
            if (slowUsed) {
                do Power.crossF3();
            }

            do Output.moveCursor(0, 0);
            do Output.printString(scoreString);
            do Output.printInt(currentScore);
            
            do Sys.wait(25);
        }
        return;
    }
    
    //МЕНЮ ПАУЗЫ (по ESC)
    method void pause_menu()
    {
        var boolean continue;
        var Button btn;
        var int key;
        let continue = false;
        
        do Screen.clearScreen();

        do Output.moveCursor(4, 21);
        do Output.printString("Current score is ");
        do Output.printInt(currentScore);

        let btn = Button.new(130, 100, 250, 50, "PRESS ESC TO CONTINUE");
        do btn.print();

        do Sys.wait(100);
        while (~continue) {
            let key = Keyboard.keyPressed();
            if (key = 140) {
                let continue = true;
            }
        }
        do Sys.wait(100);
        return;
    }
}